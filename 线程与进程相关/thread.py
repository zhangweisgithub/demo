# !/usr/bin/env python
# -*- coding: utf-8 -*-
import time
from threading import Timer, Thread


# 设置延时,可以用多进程的方式,这样主进程完成之后可以直接返回数据,子线程在后端运行(可以设置延时执行子线程)
# 就比如测试集跑测试用例就是采用这种方式进行的,确认之后直接返回数据,测试集以子线程的方式在后端运行


# def func():
#     print('执行我啦')
#
#
# Timer(5, func).start()
# print('主线程')



def test1():
    def test(a, b):
        time.sleep(5)
        print("执行我了")
        print(a,b)
    print("1:")
    time.sleep(3)
    th = Thread(target=test, args=("1", "test"))
    th.start()
    print("2")

test1()



a = [57140, 57139, 57090, 57089, 57088, 57087, 57086, 57085, 57084, 57083, 57082, 57081, 57080, 57079, 57078, 57077, 57076, 57075, 57074, 57073, 57072, 57071, 57070, 57069, 57068, 57067, 57066, 57065, 57064, 57063, 57062, 57061, 57060, 57059, 57058, 57057, 57056, 57055, 57054, 57053, 57052, 57051, 57050, 57049, 57048, 57188, 57187, 57186, 57185, 57184, 57183, 57182, 57181, 57180, 57179, 57178, 57177, 57176, 57175, 57174, 57173, 57172, 57171, 57170, 57169, 57168, 57167, 57166, 57165]
print(len(a))